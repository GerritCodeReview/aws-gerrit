{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "238c0d8e_a3e897c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Why for dual master only? Is there a follow up ticket to make it general or there is any reason why this applies to dual-master only?",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d487f75_f3d12789",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "See my previous reply to luca.\n\nDual-master stack makes use of EFS, for single-master and master-slave we have to tweak approach. I will work on that separately.",
      "parentUuid": "238c0d8e_a3e897c9",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ced81d5_e1c0b0f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-29T00:45:23Z",
      "side": 1,
      "message": "Why do we want a different approach for dual-master and single-master?\nIf we get this done for single-master, it should work for dual-master as well, or am I missing something?",
      "parentUuid": "8d487f75_f3d12789",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04897228_f6b45a0d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-29T08:52:35Z",
      "side": 1,
      "message": "Single-master and master-slave have git data stored on an EBS volume.\nIn order to function the GC task needs to mount that volume.\n\nThe way is achieved is by deploying the GC task alongside master (as part of the same service). But it wouldn\u0027t be a scheduled task: it would be a long running task, member of the master service.\n\nThe nature of the GC task is periodic, it needs to run and then stop, periodically, so I don\u0027t think having a long running task is the ideal solution to this problem.\n\nAdditionally, we would need a different way to schedule its execution, because we can no longer use the cloudwatch events to schedule the task (as it is now a long running and not a scheduled task).\n\nFor dual-master, having the EFS available to be mounted _separately_ from the master service allows the decoupling between GC task and master task, as well as allowing the _external_ scheduling via Cloudwatch events.\n\nDoes it make sense?",
      "parentUuid": "4ced81d5_e1c0b0f0",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8428fe2c_dce2d185",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-29T19:15:11Z",
      "side": 1,
      "message": "I have now done some refactoring to allow the GC task to run also on single-master and master-slave recipe.\n\nI would like to do more testing, but I am happy so far: the GC task can be executed and it runs on all recipes.\n\nHopefully things look better now, thanks for your review ðŸ˜Š",
      "parentUuid": "04897228_f6b45a0d",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0b1d608_3f5648be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-30T08:38:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8428fe2c_dce2d185",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0397c897_6c5a049d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-30T08:38:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8428fe2c_dce2d185",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc33b947_2b2a4b21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Good job. One general question: why is this part of the dual-master? I believe the GC would make sense also in a single-master scenario, isn\u0027t it?",
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea830203_c2935534",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:30:22Z",
      "side": 1,
      "message": "Yes exactly, and also for master-slave.\n\nHowever this will be a bit different because in the dual-master recipe we have access to the git data via the EFS independently, so we can mount it in the and run GC.\n\nIn the single-master and master-slave recipes however we would need the GC task to access the master EBS first, so it will need a different approach.\n\nWe had to start from somewhere so I started from this, which brings in many common components we will be able to reuse.\n\nI am happy to bring the GC task logic to other recipes as follow up changes.\nThis will also prevent this CR from becoming massive ðŸ˜Š\n\nWDYT?",
      "parentUuid": "cc33b947_2b2a4b21",
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfc70615_ba37a375",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Any reason why we don\u0027t do GC on the slaves? Is that part of another ticket?",
      "range": {
        "startLine": 43,
        "startChar": 62,
        "endLine": 43,
        "endChar": 68
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afcb5811_cdbd0c79",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "Good question.\nIs that a good practice to do?\n\nAt the moment we only have 1 slave.\nSlaves at the moment don\u0027t share any filesystem (but there\u0027s a monorail for this). If we think this is useful I suggest we do it then.\n\nOtherwise we will need to issue GC for _each_ slave separately.\n\nWDYT?",
      "parentUuid": "dfc70615_ba37a375",
      "range": {
        "startLine": 43,
        "startChar": 62,
        "endLine": 43,
        "endChar": 68
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8220b3c_0d5dcf6b",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-29T00:45:23Z",
      "side": 1,
      "message": "\u003e Good question.\n\u003e Is that a good practice to do?\n\nAbsolutely yes.\n\n\u003e At the moment we only have 1 slave.\n\nIt is still worth to be GCed.\n\n\u003e Slaves at the moment don\u0027t share any filesystem (but there\u0027s a monorail for this). If we think this is useful I suggest we do it then.\n\nWhy should you need an EFS for doing GC?\n\n\u003e Otherwise we will need to issue GC for _each_ slave separately.\n\nEach slave should have its own GC.\nOnly if the slaves are in an ASG, then we will have one GC for the whole ASG.",
      "parentUuid": "afcb5811_cdbd0c79",
      "range": {
        "startLine": 43,
        "startChar": 62,
        "endLine": 43,
        "endChar": 68
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1baf77f_98e6682d",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-29T08:52:35Z",
      "side": 1,
      "message": "\u003e \u003e Good question.\n\u003e \u003e Is that a good practice to do?\n\u003e \n\u003e Absolutely yes.\n\u003e \n\u003e \u003e At the moment we only have 1 slave.\n\u003e \n\u003e It is still worth to be GCed.\n\n\nI understand, makes sense.\n\n\u003e \n\u003e \u003e Slaves at the moment don\u0027t share any filesystem (but there\u0027s a monorail for this). If we think this is useful I suggest we do it then.\n\u003e \n\u003e Why should you need an EFS for doing GC?\n\nWith the current approach you need EFS (see my previous reply).\nIf we start deploying long running GC tasks _alongside_ gerrit than we can mount the git volume, but we\u0027d need to find another way to do scheduling.\n\n\u003e \n\u003e \u003e Otherwise we will need to issue GC for _each_ slave separately.\n\u003e \n\u003e Each slave should have its own GC.\n\u003e Only if the slaves are in an ASG, then we will have one GC for the whole ASG.\n\nWe already have an ASG for slaves and it contains 1 slave only, but until we have them sharing EFS we still need to have GC against each slave.\n\nMy point was that if we are planning to move to EFS in the near future, we could address this issue after that, so that we have 1 GC only.\nAnyway, I will open a monorail ticket to get slaves GC\u0027d.",
      "parentUuid": "d8220b3c_0d5dcf6b",
      "range": {
        "startLine": 43,
        "startChar": 62,
        "endLine": 43,
        "endChar": 68
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85b7b72a_01981df3",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-30T08:38:06Z",
      "side": 1,
      "message": "Done:\nhttps://bugs.chromium.org/p/gerrit/issues/detail?id\u003d13886",
      "parentUuid": "d1baf77f_98e6682d",
      "range": {
        "startLine": 43,
        "startChar": 62,
        "endLine": 43,
        "endChar": 68
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "907687f2_9c69b7b0",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Isn\u0027t this already a comma separated list?",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "098fecc7_672cee49",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "CF checks that is a comma separted list in the Parameters section, but then it explodes it into an array.\n\nSo if you _actually_ want a comma separated list you need to re-join it together.",
      "parentUuid": "907687f2_9c69b7b0",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "593b943f_d434b33b",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-29T00:45:23Z",
      "side": 1,
      "message": "I do not believe that the list of project should be part of the deployment.\nProjects are user data and they can change continuously: we do not want to change the deployment just because people created or deleted projects.\n\nCan the list of projects be extracted from Gerrit directly?",
      "parentUuid": "098fecc7_672cee49",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d844a88_8f24d785",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-29T08:44:08Z",
      "side": 1,
      "message": "\u003e I do not believe that the list of project should be part of the deployment.\n\u003e Projects are user data and they can change continuously: we do not want to change the deployment just because people created or deleted projects.\n\u003e \nI actually believe the deployment should be as idempotent as possible. Hence if you want to add a new project you should re-deploy a new GC stack with updated projects.",
      "parentUuid": "593b943f_d434b33b",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6925da68_65aac4da",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-29T08:52:35Z",
      "side": 1,
      "message": "\u003e I do not believe that the list of project should be part of the deployment.\n\u003e Projects are user data and they can change continuously: we do not want to change the deployment just because people created or deleted projects.\n\nWhat do you mean by \"change the deployment\"?\nWith the current implementation, if the list of repositories change, only the scheduled-GC-task stack would need to be deployed.\n\nEven better, we could avoid this alltogether if we got the list of repositories as parameter[1].\n\nWDYT?\n\n\u003e \n\u003e Can the list of projects be extracted from Gerrit directly?\n\nI think the Gerrit admin can benefit from allowing GC only specific repositories.\nGerrit installation might have thousands of gerrit repositories, but only a handful are actually used and require GC.\n\nWDYT?\n\n[1]https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html",
      "parentUuid": "593b943f_d434b33b",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "050b692c_c647e1fd",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-30T00:20:39Z",
      "side": 1,
      "message": "\u003e \u003e I do not believe that the list of project should be part of the deployment.\n\u003e \u003e Projects are user data and they can change continuously: we do not want to change the deployment just because people created or deleted projects.\n\u003e \n\u003e What do you mean by \"change the deployment\"?\n\nThe deployments are immutable, and they include the parameters.\nIf you change any parameter, you need to do a new blue/green deployment.\n\n\u003e With the current implementation, if the list of repositories change, only the scheduled-GC-task stack would need to be deployed.\n\nThat\u0027s a redeployment indeed. Repositories are data, they change every single day. Having to change the deployment based on the change in repositories is a management overload.\n\nHave you looked instead at gc-conductor?\nhttps://gerrit.googlesource.com/plugins/gc-conductor/\n\nIt looks like it does what we want already. It requires a data-base, but we could use H2.\n\n\n\u003e Even better, we could avoid this alltogether if we got the list of repositories as parameter[1].\n\nYou would still have to manage that parameter and redeploy manually, which is very inconvenient.\n\n\u003e \u003e Can the list of projects be extracted from Gerrit directly?\n\u003e \n\u003e I think the Gerrit admin can benefit from allowing GC only specific repositories.\n\u003e Gerrit installation might have thousands of gerrit repositories, but only a handful are actually used and require GC.\n\nFor large-scale Gerrit installations, the number of repositories are tens of thousands. I doubt the Gerrit admin would like to monitor and manage a list of hundreds of repositories by hand.",
      "parentUuid": "6925da68_65aac4da",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "260277f2_8be45005",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-30T08:38:06Z",
      "side": 1,
      "message": "\u003e \u003e \u003e I do not believe that the list of project should be part of the deployment.\n\u003e \u003e \u003e Projects are user data and they can change continuously: we do not want to change the deployment just because people created or deleted projects.\n\u003e \u003e \n\u003e \u003e What do you mean by \"change the deployment\"?\n\u003e \n\u003e The deployments are immutable, and they include the parameters.\n\u003e If you change any parameter, you need to do a new blue/green deployment.\n\u003e \n\u003e \u003e With the current implementation, if the list of repositories change, only the scheduled-GC-task stack would need to be deployed.\n\u003e \n\u003e That\u0027s a redeployment indeed. Repositories are data, they change every single day. Having to change the deployment based on the change in repositories is a management overload.\n\u003e \n\u003e Have you looked instead at gc-conductor?\n\u003e https://gerrit.googlesource.com/plugins/gc-conductor/\n\u003e \n\u003e It looks like it does what we want already. It requires a data-base, but we could use H2.\n\n\nThe documentation specifically talks about postgresql (which is also the default), but perhaps it just works out of the box on H2.\nSure, I will take a look.\n\n\u003e \n\u003e \n\u003e \u003e Even better, we could avoid this alltogether if we got the list of repositories as parameter[1].\n\u003e \n\u003e You would still have to manage that parameter and redeploy manually, which is very inconvenient.\n\nI don\u0027t think redeploy the gc stack is inconvenient. it is independent from any other stack and it is very quickly created/destroyed (or even more quickly updated).\n\nAlso it doesn\u0027t have to be necessarily re-deployed manually, deployments in general shouldn\u0027t be done manually, but as part of some pipeline: I think this would just integrate there.\n\n\u003e \n\u003e \u003e \u003e Can the list of projects be extracted from Gerrit directly?\n\u003e \u003e \n\u003e \u003e I think the Gerrit admin can benefit from allowing GC only specific repositories.\n\u003e \u003e Gerrit installation might have thousands of gerrit repositories, but only a handful are actually used and require GC.\n\u003e \n\u003e For large-scale Gerrit installations, the number of repositories are tens of thousands. I doubt the Gerrit admin would like to monitor and manage a list of hundreds of repositories by hand.\n\nThat was exactly the point I was trying to make: doing GC for all those tens of thousands might be really time consuming and possibly a waste of time and resources.\n\nI think it\u0027s actually quite easy to parse the logs to find all the repositories that have been modified in a $recent interval (i.e. 6/12 months) and only focus GC on those. That might just be a small subset of those tens of thousands.\n\nIn general, I think it would be wrong to assume that the Gerrit admin wants to do GC for all of them, all the time. The way that list is generated or maintained and  is up to the Gerrit admin and specific to the context of their business I believe.",
      "parentUuid": "050b692c_c647e1fd",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cca487b6_1f0fe449",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-30T09:58:04Z",
      "side": 1,
      "message": "I believe that the solution you are describing is the gc-conductor, which is more general purpose and could be applied to AWS-Gerrit and other scenarios.\n\nI am fine to keep the current approach as long as we document its limits in the README.md, pointing to gc-conductor where the number of repositories grows.",
      "parentUuid": "260277f2_8be45005",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26fa29c8_149e9d60",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "These should be parametric: the memory and CPU depends on the size of the repository and number of refs/objects.\n\nOne user may want to have a lot more memory if they are doing GC of a mono-repo, or giving a lot more CPUs in case they have tons of refs.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b28fce6f_400a2926",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "Good point, I will do this",
      "parentUuid": "26fa29c8_149e9d60",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0b2e96e_d0775924",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Why not using the official OpenJDK?",
      "range": {
        "startLine": 1,
        "startChar": 5,
        "endLine": 1,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e87403e3_bddb2323",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "I didn\u0027t know openjdk came built on alpine, but it actually does: openjdk:\u003cversion\u003e-alpine.\n\nI will replace this.",
      "parentUuid": "a0b2e96e_d0775924",
      "range": {
        "startLine": 1,
        "startChar": 5,
        "endLine": 1,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "711e8fb7_04b1b990",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Do we need findutils?",
      "range": {
        "startLine": 9,
        "startChar": 35,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3810d9f_d096a935",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "We use jgit for GC, why do we want also git?",
      "range": {
        "startLine": 9,
        "startChar": 31,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "923e37a6_cc16752e",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "to get some stats. jgit does not allow to run count-objects, so we install git to do that.",
      "parentUuid": "d3810d9f_d096a935",
      "range": {
        "startLine": 9,
        "startChar": 31,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c6bb187_6b9451e6",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "We need this to allow utils.sh#L10 to run find using -printf",
      "parentUuid": "711e8fb7_04b1b990",
      "range": {
        "startLine": 9,
        "startChar": 35,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0260e5f7_9093b277",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-29T00:45:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1c6bb187_6b9451e6",
      "range": {
        "startLine": 9,
        "startChar": 35,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ddcdcc9_c7baf311",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-29T00:45:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "923e37a6_cc16752e",
      "range": {
        "startLine": 9,
        "startChar": 31,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b167cbd1_c630f77f",
        "filename": "dual-master/maintenance/git-gc/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "nit:empty line",
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa6c061c_42bd57a6",
        "filename": "dual-master/maintenance/git-gc/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T17:59:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b167cbd1_c630f77f",
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e89d9c42_ba88475f",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "If we have a typo in the projects list, we risk to miss the whole GC process.\nWhy not failing the process, so that the administrator will then investigate why the GC failed?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a827ec36_d56bd807",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Isn\u0027t it better as it is at the moment, i.e.: only skip GC for the non-existent project, but just do it for the rest?\n\nThis way the admin will only have to run GC on the skipped repos to temporarily fix the issue.",
      "parentUuid": "e89d9c42_ba88475f",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a0e791e_2a600386",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "Yep that was my thinking behind that choice.\nIf you are GCing 100 repos and you make a typo, you can still go through the other 99 and log the error for further inspection.\n\n@luca WDYT?",
      "parentUuid": "a827ec36_d56bd807",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "970ec2fc_338e3c60",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-29T00:45:23Z",
      "side": 1,
      "message": "See my comment about not specifying the projects in the deployment configuration: let\u0027s just get the projects list from the Gerrit\u0027s git directory, isn\u0027t it?",
      "parentUuid": "9a0e791e_2a600386",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c465ade6_81f4f5c2",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-29T08:52:35Z",
      "side": 1,
      "message": "See my reply, I think it is useful to control which repositories to GC.",
      "parentUuid": "970ec2fc_338e3c60",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2279a0f9_174fc9f2",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-30T00:20:39Z",
      "side": 1,
      "message": "For small sized setups, yes. For large setups, an automatic mechanism is more manageable.",
      "parentUuid": "c465ade6_81f4f5c2",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7302f6d3_6ece5c74",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-30T08:38:06Z",
      "side": 1,
      "message": "\u003e For small sized setups, yes. For large setups, an automatic mechanism is more manageable.\n\nSee my comment above on this. I think not having control on what repositories are GC\u0027d is actually less manageable: the Gerrit admin just has no choice but to wait for all thousands of repositories to be GC\u0027d, with no control over it.",
      "parentUuid": "2279a0f9_174fc9f2",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "511c9077_3f2ddc85",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "The date is already included in the log function",
      "range": {
        "startLine": 34,
        "startChar": 30,
        "endLine": 34,
        "endChar": 58
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aecfc4a1_783c4bd4",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "Thanks, I created the log function later and I forgot to update this line.",
      "parentUuid": "511c9077_3f2ddc85",
      "range": {
        "startLine": 34,
        "startChar": 30,
        "endLine": 34,
        "endChar": 58
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3b3d9c6_c1afbbdc",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-30T08:38:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aecfc4a1_783c4bd4",
      "range": {
        "startLine": 34,
        "startChar": 30,
        "endLine": 34,
        "endChar": 58
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba2f301b_54f3f89f",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Same as above",
      "range": {
        "startLine": 37,
        "startChar": 31,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecff65e4_6b1f478f",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ba2f301b_54f3f89f",
      "range": {
        "startLine": 37,
        "startChar": 31,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14d8ec78_9953268b",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-30T08:38:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecff65e4_6b1f478f",
      "range": {
        "startLine": 37,
        "startChar": 31,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828e60f3_2e7d0a8e",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Where is this compression formula coming from?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "887e2055_058d4088",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "It\u0027s a simple percentage calculation remaining objects*100/total objects",
      "parentUuid": "828e60f3_2e7d0a8e",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc420675_36355360",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Compression rates could be negative. Do you think it might be worthy adding a comment explaining why?",
      "parentUuid": "887e2055_058d4088",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81322277_2e487688",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "I am not sure why that\u0027s the case.\nCould you suggest a good explanation to put as a comment?",
      "parentUuid": "cc420675_36355360",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f89a4a78_9e7038e8",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-29T00:45:23Z",
      "side": 1,
      "message": "Ah, that\u0027s the % of reduction of loose objects: I won\u0027t call it compression as it would be misleading.",
      "parentUuid": "81322277_2e487688",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deadc4c7_81514ddb",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-29T08:44:08Z",
      "side": 1,
      "message": "\u003e Ah, that\u0027s the % of reduction of loose objects: I won\u0027t call it compression as it would be misleading.\n\nMaybe we should just call it \"loose objects delta\"?",
      "parentUuid": "f89a4a78_9e7038e8",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19091c04_51b3a49f",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-29T08:52:35Z",
      "side": 1,
      "message": "I have removed this (see new gc.sh scrip): the percentage can be programmatically computed by processing the logs, if wanted.",
      "parentUuid": "f89a4a78_9e7038e8",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592978ed_8ab7cfbf",
        "filename": "dual-master/maintenance/git-gc/scripts/utils.sh",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "I think it might be worthy adding the dates of the keep and bitmaps files.\nFor example, the keep file might be there temporarily when the `print_stats` was invoked. The problem with keep file is when they haven\u0027t been deleted during a bitmap creation, hence comparing bitmaps and keep files timestamp can be helpful for debugging purposes. \n\nWe can even do it in a follow up ticket.",
      "range": {
        "startLine": 7,
        "startChar": 3,
        "endLine": 8,
        "endChar": 76
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49888aab_15e9328f",
        "filename": "dual-master/maintenance/git-gc/scripts/utils.sh",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "Yep, good suggestion. if you think it\u0027s useful I am happy to do it as a follow up ticket.",
      "parentUuid": "592978ed_8ab7cfbf",
      "range": {
        "startLine": 7,
        "startChar": 3,
        "endLine": 8,
        "endChar": 76
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c11c2220_52305603",
        "filename": "dual-master/maintenance/git-gc/scripts/utils.sh",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Best to do the opposite: year/month/day\nIt would allow a sorting to keep the chronological ordering of the events.",
      "range": {
        "startLine": 15,
        "startChar": 16,
        "endLine": 15,
        "endChar": 25
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a73b54c2_3a144b3e",
        "filename": "dual-master/maintenance/git-gc/scripts/utils.sh",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c11c2220_52305603",
      "range": {
        "startLine": 15,
        "startChar": 16,
        "endLine": 15,
        "endChar": 25
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}