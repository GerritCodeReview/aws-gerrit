{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "238c0d8e_a3e897c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Why for dual master only? Is there a follow up ticket to make it general or there is any reason why this applies to dual-master only?",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d487f75_f3d12789",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "See my previous reply to luca.\n\nDual-master stack makes use of EFS, for single-master and master-slave we have to tweak approach. I will work on that separately.",
      "parentUuid": "238c0d8e_a3e897c9",
      "range": {
        "startLine": 7,
        "startChar": 32,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc33b947_2b2a4b21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Good job. One general question: why is this part of the dual-master? I believe the GC would make sense also in a single-master scenario, isn\u0027t it?",
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea830203_c2935534",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:30:22Z",
      "side": 1,
      "message": "Yes exactly, and also for master-slave.\n\nHowever this will be a bit different because in the dual-master recipe we have access to the git data via the EFS independently, so we can mount it in the and run GC.\n\nIn the single-master and master-slave recipes however we would need the GC task to access the master EBS first, so it will need a different approach.\n\nWe had to start from somewhere so I started from this, which brings in many common components we will be able to reuse.\n\nI am happy to bring the GC task logic to other recipes as follow up changes.\nThis will also prevent this CR from becoming massive ðŸ˜Š\n\nWDYT?",
      "parentUuid": "cc33b947_2b2a4b21",
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfc70615_ba37a375",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Any reason why we don\u0027t do GC on the slaves? Is that part of another ticket?",
      "range": {
        "startLine": 43,
        "startChar": 62,
        "endLine": 43,
        "endChar": 68
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afcb5811_cdbd0c79",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "Good question.\nIs that a good practice to do?\n\nAt the moment we only have 1 slave.\nSlaves at the moment don\u0027t share any filesystem (but there\u0027s a monorail for this). If we think this is useful I suggest we do it then.\n\nOtherwise we will need to issue GC for _each_ slave separately.\n\nWDYT?",
      "parentUuid": "dfc70615_ba37a375",
      "range": {
        "startLine": 43,
        "startChar": 62,
        "endLine": 43,
        "endChar": 68
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "907687f2_9c69b7b0",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Isn\u0027t this already a comma separated list?",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "098fecc7_672cee49",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "CF checks that is a comma separted list in the Parameters section, but then it explodes it into an array.\n\nSo if you _actually_ want a comma separated list you need to re-join it together.",
      "parentUuid": "907687f2_9c69b7b0",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 57
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26fa29c8_149e9d60",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "These should be parametric: the memory and CPU depends on the size of the repository and number of refs/objects.\n\nOne user may want to have a lot more memory if they are doing GC of a mono-repo, or giving a lot more CPUs in case they have tons of refs.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b28fce6f_400a2926",
        "filename": "dual-master/cf-task-git-gc.yml",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "Good point, I will do this",
      "parentUuid": "26fa29c8_149e9d60",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0b2e96e_d0775924",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Why not using the official OpenJDK?",
      "range": {
        "startLine": 1,
        "startChar": 5,
        "endLine": 1,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e87403e3_bddb2323",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "I didn\u0027t know openjdk came built on alpine, but it actually does: openjdk:\u003cversion\u003e-alpine.\n\nI will replace this.",
      "parentUuid": "a0b2e96e_d0775924",
      "range": {
        "startLine": 1,
        "startChar": 5,
        "endLine": 1,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "711e8fb7_04b1b990",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Do we need findutils?",
      "range": {
        "startLine": 9,
        "startChar": 35,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3810d9f_d096a935",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "We use jgit for GC, why do we want also git?",
      "range": {
        "startLine": 9,
        "startChar": 31,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "923e37a6_cc16752e",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "to get some stats. jgit does not allow to run count-objects, so we install git to do that.",
      "parentUuid": "d3810d9f_d096a935",
      "range": {
        "startLine": 9,
        "startChar": 31,
        "endLine": 9,
        "endChar": 34
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c6bb187_6b9451e6",
        "filename": "dual-master/maintenance/git-gc/Dockerfile",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "We need this to allow utils.sh#L10 to run find using -printf",
      "parentUuid": "711e8fb7_04b1b990",
      "range": {
        "startLine": 9,
        "startChar": 35,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b167cbd1_c630f77f",
        "filename": "dual-master/maintenance/git-gc/Makefile",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "nit:empty line",
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e89d9c42_ba88475f",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "If we have a typo in the projects list, we risk to miss the whole GC process.\nWhy not failing the process, so that the administrator will then investigate why the GC failed?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a827ec36_d56bd807",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Isn\u0027t it better as it is at the moment, i.e.: only skip GC for the non-existent project, but just do it for the rest?\n\nThis way the admin will only have to run GC on the skipped repos to temporarily fix the issue.",
      "parentUuid": "e89d9c42_ba88475f",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a0e791e_2a600386",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "Yep that was my thinking behind that choice.\nIf you are GCing 100 repos and you make a typo, you can still go through the other 99 and log the error for further inspection.\n\n@luca WDYT?",
      "parentUuid": "a827ec36_d56bd807",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 6
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "511c9077_3f2ddc85",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "The date is already included in the log function",
      "range": {
        "startLine": 34,
        "startChar": 30,
        "endLine": 34,
        "endChar": 58
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aecfc4a1_783c4bd4",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "Thanks, I created the log function later and I forgot to update this line.",
      "parentUuid": "511c9077_3f2ddc85",
      "range": {
        "startLine": 34,
        "startChar": 30,
        "endLine": 34,
        "endChar": 58
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba2f301b_54f3f89f",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Same as above",
      "range": {
        "startLine": 37,
        "startChar": 31,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecff65e4_6b1f478f",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ba2f301b_54f3f89f",
      "range": {
        "startLine": 37,
        "startChar": 31,
        "endLine": 37,
        "endChar": 59
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828e60f3_2e7d0a8e",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Where is this compression formula coming from?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "887e2055_058d4088",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "It\u0027s a simple percentage calculation remaining objects*100/total objects",
      "parentUuid": "828e60f3_2e7d0a8e",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc420675_36355360",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "Compression rates could be negative. Do you think it might be worthy adding a comment explaining why?",
      "parentUuid": "887e2055_058d4088",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81322277_2e487688",
        "filename": "dual-master/maintenance/git-gc/scripts/gc.sh",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "I am not sure why that\u0027s the case.\nCould you suggest a good explanation to put as a comment?",
      "parentUuid": "cc420675_36355360",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 94
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592978ed_8ab7cfbf",
        "filename": "dual-master/maintenance/git-gc/scripts/utils.sh",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-12-24T16:45:22Z",
      "side": 1,
      "message": "I think it might be worthy adding the dates of the keep and bitmaps files.\nFor example, the keep file might be there temporarily when the `print_stats` was invoked. The problem with keep file is when they haven\u0027t been deleted during a bitmap creation, hence comparing bitmaps and keep files timestamp can be helpful for debugging purposes. \n\nWe can even do it in a follow up ticket.",
      "range": {
        "startLine": 7,
        "startChar": 3,
        "endLine": 8,
        "endChar": 76
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49888aab_15e9328f",
        "filename": "dual-master/maintenance/git-gc/scripts/utils.sh",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-28T11:35:43Z",
      "side": 1,
      "message": "Yep, good suggestion. if you think it\u0027s useful I am happy to do it as a follow up ticket.",
      "parentUuid": "592978ed_8ab7cfbf",
      "range": {
        "startLine": 7,
        "startChar": 3,
        "endLine": 8,
        "endChar": 76
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c11c2220_52305603",
        "filename": "dual-master/maintenance/git-gc/scripts/utils.sh",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-12-24T01:36:28Z",
      "side": 1,
      "message": "Best to do the opposite: year/month/day\nIt would allow a sorting to keep the chronological ordering of the events.",
      "range": {
        "startLine": 15,
        "startChar": 16,
        "endLine": 15,
        "endChar": 25
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a73b54c2_3a144b3e",
        "filename": "dual-master/maintenance/git-gc/scripts/utils.sh",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2020-12-24T10:21:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c11c2220_52305603",
      "range": {
        "startLine": 15,
        "startChar": 16,
        "endLine": 15,
        "endChar": 25
      },
      "revId": "37bccaa9820aba2b7ef9a09d543c03d295eac5fd",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}