AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service into an ECS cluster behind a public load balancer.
Parameters:
  GerritServiceName:
    Type: String
    Default: gerrit-master
  SlaveServiceStackName:
    Type: String
    Default: gerrit-slave
  ClusterStackName:
      Description: Stack name of the ECS cluster to deply the serivces
      Type: String
      Default: gerrit-cluster
  EnvironmentName:
      Description: An environment name used to build the log stream names
      Type: String
      Default: test
  DockerImage:
        Description: Gerrit official Docker image
        Type: String
        Default: aws-gerrit/gerrit:latest
  GerritLBDockerImage:
        Description: Load Balancer official Docker image
        Type: String
        Default: haproxy:1.7
  DockerRegistryUrl:
        Description: Docker registry URL
        Type: String
  DesiredCount:
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 1
  HTTPGerritLBPort:
        Description: Gerrit Load balancer HTTP port
        Type: Number
        Default: 8080
  HTTPHostPort:
        Description: Gerrit HTTP port
        Type: Number
        Default: 8080
  HTTPContainerPort:
        Description: Gerrit HTTP port
        Type: Number
        Default: 8080
  HTTPSHostPort:
        Description: Gerrit HTTPS port
        Type: Number
        Default: 443
  SSHHostPort:
        Description: Gerrit SSH port
        Type: Number
        Default: 29418
  SSHContainerPort:
        Description: Gerrit SSH port
        Type: Number
        Default: 29418
  GitPort:
        Description: Git daemon port
        Type: Number
        Default: 9418
  GitSSHPort:
        Description: Git ssh port
        Type: Number
        Default: 1022
  CertificateArn:
        Description: SSL Certificates ARN
        Type: String
  HostedZoneName:
        Description: The route53 HostedZoneName.
        Type: String
  Subdomain:
        Description: The subdomain of the Gerrit cluster
        Type: String
        Default: gerrit-master-demo
  SlaveSubdomain:
        Description: The subdomain of the Gerrit slave
        Type: String
  LBSubdomain:
        Description: The subdomain of the Gerrit load balancer
        Type: String
  GerritKeyPrefix:
        Description: Gerrit credentials keys prefix
        Type: String
  PeerSubdomain:
        Description: The subdomain of the Gerrit cluster
        Type: String
  GerritGitVolume:
      Description: Gerrit git volume name
      Type: String
      Default: gerrit-git-master
  GerritEventsVolume:
      Description: Gerrit replication events volume name
      Type: String
      Default: gerrit-events-master
  GerritWebsessionsVolume:
      Description: Gerrit git volume name
      Type: String
      Default: gerrit-ha-websessions-master
  GerritDataVolume:
      Description: Gerrit data volume name
      Type: String
      Default: gerrit-data-master
  GerritIndexVolume:
      Description: Gerrit index volume name
      Type: String
      Default: gerrit-index-master
  GerritCacheVolume:
      Description: Gerrit cache volume name
      Type: String
      Default: gerrit-cache-master
  GerritDbVolume:
      Description: Gerrit db volume name
      Type: String
      Default: gerrit-db-master
  GerritLogsVolume:
      Description: Gerrit logs volume name
      Type: String
      Default: gerrit-logs-master
  ReindexAtSartup:
      Description: Force index reindexing at startup
      Type: String
      Default: false
  GerritRAM:
      Description: RAM to allocate to the Gerrit container
      Type: Number
      Default: 70000
  GerritCPU:
      Description: vCPU to allocate to the Gerrit container
      Type: Number
      Default: 10240
  GerritHeapLimit:
      Description: Gerrit Heap limit
      Type: String
      Default: 35g
  JgitCacheSize:
      Description: JGit cache size
      Type: String
      Default: 12g
  LDAPServer:
      Description: LDAP server URL
      Type: String
  LDAPUsername:
      Description: Username to bind to the LDAP server with
      Type: String
  LDAPAccountBase:
      Description: Root of the tree containing all user accounts
      Type: String
  LDAPGroupBase:
      Description: Root of the tree containing all group objects
      Type: String
  SMTPServer:
      Description: SMTP server URL
      Type: String
  SMTPUser:
      Description: User name to authenticate with, if required for relay
      Type: String
  SMTPDomain:
      Description: Domain to be used in the From field
      Type: String

Resources:
    Service:
        Type: AWS::ECS::Service
        DependsOn:
          - HTTPListener
          - SSHListener
        Properties:
            Cluster:
              Fn::ImportValue:
                  !Join [':', [!Ref 'ClusterStackName', 'ClusterName']]
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers:
                - ContainerName: !Ref GerritServiceName
                  ContainerPort: !Ref HTTPContainerPort
                  TargetGroupArn: !Ref HTTPTargetGroup
                - ContainerName: !Ref GerritServiceName
                  ContainerPort: !Ref SSHContainerPort
                  TargetGroupArn: !Ref SSHTargetGroup

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: !Join ['', [!Ref GerritServiceName, TaskDefinition]]
            TaskRoleArn: !GetAtt ECSTaskExecutionRoleStack.Outputs.TaskExecutionRoleRef
            ExecutionRoleArn: !GetAtt ECSTaskExecutionRoleStack.Outputs.TaskExecutionRoleRef
            NetworkMode: bridge
            ContainerDefinitions:
                - Name: !Ref GerritServiceName
                  Essential: true
                  Image: !Sub '${DockerRegistryUrl}/${DockerImage}'
                  Environment:
                    - Name: CANONICAL_WEB_URL
                      Value: !Sub 'https://${LBSubdomain}.${HostedZoneName}'
                    - Name: HTTPD_LISTEN_URL
                      Value: !Sub 'proxy-https://*:${HTTPContainerPort}/'
                    - Name: AWS_REGION
                      Value: !Ref AWS::Region
                    - Name: SETUP_REPLICATION
                      Value: true
                    - Name: GERRIT_KEY_PREFIX
                      Value: !Ref GerritKeyPrefix
                    - Name: SETUP_HA
                      Value: true
                    - Name: HA_PEER_URL
                      Value: !Sub 'http://${PeerSubdomain}.${HostedZoneName}:${HTTPGerritLBPort}'
                    - Name: HOSTED_ZONE_NAME
                      Value: !Ref HostedZoneName
                    - Name: REINDEX_AT_STARTUP
                      Value: !Ref ReindexAtSartup
                    - Name: GERRIT_HEAP_LIMIT
                      Value: !Ref GerritHeapLimit
                    - Name: JGIT_CACHE_SIZE
                      Value: !Ref JgitCacheSize
                    - Name: LDAP_SERVER
                      Value: !Ref LDAPServer
                    - Name: LDAP_USERNAME
                      Value: !Ref LDAPUsername
                    - Name: LDAP_ACCOUNT_BASE
                      Value: !Ref LDAPAccountBase
                    - Name: LDAP_GROUP_BASE
                      Value: !Ref LDAPGroupBase
                    - Name: SMTP_SERVER
                      Value: !Ref SMTPServer
                    - Name: SMTP_USER
                      Value: !Ref SMTPUser
                    - Name: SMTP_DOMAIN
                      Value: !Ref SMTPDomain
                    - Name: GIT_PORT
                      Value: !Ref GitPort
                    - Name: GIT_SSH_PORT
                      Value: !Ref GitSSHPort
                    - Name: SLAVE_SUBDOMAIN
                      Value: !Ref SlaveSubdomain
                  MountPoints:
                    - SourceVolume: !Ref GerritGitVolume
                      ContainerPath: /var/gerrit/git
                    - SourceVolume: !Ref GerritWebsessionsVolume
                      ContainerPath: /var/gerrit/high-availability
                    - SourceVolume: !Ref GerritDataVolume
                      ContainerPath: /var/gerrit/data
                    - SourceVolume: !Ref GerritIndexVolume
                      ContainerPath: /var/gerrit/index
                    - SourceVolume: !Ref GerritCacheVolume
                      ContainerPath: /var/gerrit/cache
                    - SourceVolume: !Ref GerritDbVolume
                      ContainerPath: /var/gerrit/db
                    - SourceVolume: !Ref GerritLogsVolume
                      ContainerPath: /var/gerrit/logs
                    - SourceVolume: !Ref GerritEventsVolume
                      ContainerPath: /var/gerrit/events
                  Cpu: !Ref GerritCPU
                  Memory: !Ref GerritRAM
                  PortMappings:
                    - ContainerPort: !Ref HTTPContainerPort
                      HostPort: !Ref HTTPHostPort
                      Protocol: tcp
                    - ContainerPort: !Ref SSHContainerPort
                      HostPort: !Ref SSHHostPort
                      Protocol: tcp
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref ClusterStackName
                        awslogs-region: !Ref AWS::Region
                        awslogs-stream-prefix: !Ref EnvironmentName
            Volumes:
              - Name: !Ref 'GerritGitVolume'
                Host:
                  SourcePath: "/mnt/efs/gerrit-shared/git"
              - Name: !Ref 'GerritEventsVolume'
                Host:
                  SourcePath: "/mnt/efs/gerrit-shared/events"
              - Name: !Ref 'GerritWebsessionsVolume'
                Host:
                  SourcePath: "/mnt/efs/gerrit-shared/high-availability"
              - Name: !Ref 'GerritDbVolume'
                DockerVolumeConfiguration:
                  Scope: shared
                  Autoprovision: true
                  Driver: local
                  Labels:
                    gerrit-db: !Join ['-', [!Ref EnvironmentName, !Ref GerritDbVolume]]
              - Name: !Ref 'GerritDataVolume'
                DockerVolumeConfiguration:
                  Scope: shared
                  Autoprovision: true
                  Driver: local
                  Labels:
                    gerrit-data: !Join ['-', [!Ref EnvironmentName, !Ref GerritDataVolume]]
              - Name: !Ref 'GerritCacheVolume'
                DockerVolumeConfiguration:
                  Scope: shared
                  Autoprovision: true
                  Driver: local
                  Labels:
                    gerrit-cache: !Join ['-', [!Ref EnvironmentName, !Ref GerritCacheVolume]]
              - Name: !Ref 'GerritIndexVolume'
                DockerVolumeConfiguration:
                  Scope: shared
                  Autoprovision: true
                  Driver: local
                  Labels:
                    gerrit-index: !Join ['-', [!Ref EnvironmentName, !Ref GerritIndexVolume]]
              - Name: !Ref 'GerritLogsVolume'
                DockerVolumeConfiguration:
                  Scope: shared
                  Autoprovision: true
                  Driver: local
                  Labels:
                    gerrit-logs: !Join ['-', [!Ref EnvironmentName, !Ref GerritLogsVolume]]


    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Type: network
            Scheme: internet-facing
            Subnets:
              - Fn::ImportValue:
                  !Join [':', [!Ref 'ClusterStackName', 'PublicSubnetOne']]
            Tags:
                - Key: Name
                  Value: !Join ['-', [!Ref 'EnvironmentName', !Ref 'GerritServiceName', 'nlb']]

    HTTPTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        DependsOn: LoadBalancer
        Properties:
            VpcId:
              Fn::ImportValue:
                  !Join [':', [!Ref 'ClusterStackName', 'VPCId']]
            Port: !Ref HTTPGerritLBPort
            Protocol: TCP

    HTTPListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        DependsOn: LoadBalancer
        Properties:
            DefaultActions:
            - Type: forward
              TargetGroupArn: !Ref HTTPTargetGroup
            LoadBalancerArn: !Ref LoadBalancer
            Port: !Ref HTTPGerritLBPort
            Protocol: TCP

    SSHTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        DependsOn: LoadBalancer
        Properties:
            VpcId:
              Fn::ImportValue:
                  !Join [':', [!Ref 'ClusterStackName', 'VPCId']]
            Port: !Ref SSHHostPort
            Protocol: TCP

    SSHListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        DependsOn: LoadBalancer
        Properties:
            DefaultActions:
            - Type: forward
              TargetGroupArn: !Ref SSHTargetGroup
            LoadBalancerArn: !Ref LoadBalancer
            Port: !Ref SSHHostPort
            Protocol: TCP

    ECSTaskExecutionRoleStack:
      Type: AWS::CloudFormation::Stack
      Properties:
        TemplateURL: https://aws-gerrit-cf-templates.s3.amazonaws.com/cf-gerrit-task-execution-role.yml
        TimeoutInMinutes: '5'

Outputs:
  PublicLoadBalancerDNSName:
    Description: The DNS name of the external load balancer
    Value: !GetAtt 'LoadBalancer.DNSName'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'PublicLoadBalancerDNSName' ] ]
  CanonicalHostedZoneID:
    Description: Canonical Hosted Zone ID
    Value: !GetAtt 'LoadBalancer.CanonicalHostedZoneID'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'CanonicalHostedZoneID' ] ]
  PublicLoadBalancerUrl:
    Description: The url of the external load balancer
    Value: !Join ['', ['http://', !GetAtt 'LoadBalancer.DNSName']]
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'PublicLoadBalancerUrl' ] ]
  HostedZoneName:
    Description: Route53 Hosted Zone name
    Value: !Ref HostedZoneName
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'HostedZoneName' ] ]
  Subdomain:
    Description: Service DNS subdomain
    Value: !Ref Subdomain
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'Subdomain' ] ]
  CanonicalWebUrl:
    Description: Canonical Web URL
    Value: !Sub 'https://${Subdomain}.${HostedZoneName}'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'CanonicalWebUrl' ] ]
