module(load="imudp")
module(load="mmfields")

$UDPServerAddress *
$UDPServerRun 514

# Define the JSON template
template(name="jsondump" type="list") {
  constant(value="{\"format\": \"json\", \"version\": 1}\n")
  constant(value="{")
    property(outname="name" name="$!f4" format="jsonf") constant(value=",")
    property(outname="id" name="$!f28" format="jsonf") constant(value=",")
    constant(value="\"start_time\":") property(name="$.start_time_seconds_with_ms") constant(value=",")
    constant(value="\"end_time\":") property(name="$.end_time_seconds_with_ms") constant(value=",")
    property(outname="trace_id" name="$!f27" format="jsonf") constant(value=",")
    constant(value="\"annotations\": {")
      property(outname="termination_code" name="$!f16" format="jsonf")
    constant(value="}") constant(value=",")
    constant(value="\"http\": { \"request\":") constant(value="{")
        constant(value="\"url\":") constant(value="\"") property(name="$!f26") constant(value="\"") constant(value=",")
        property(outname="method" name="$!f24" format="jsonf") constant(value=",")
        property(outname="user_agent" name="$!f25" format="jsonf") constant(value=",")
        property(outname="client_ip" name="$!f1" format="jsonf")
      constant(value="}") constant(value=",")
      constant(value="\"response\": {")
        property(outname="status" name="$!f12" format="jsonf") constant(value=",")
        property(outname="content_length" name="$!f33" format="jsonf")
      constant(value="}")
    constant(value="}") constant(value=",")
    constant(value="\"metadata\": {")
      constant(value="\"connections\": {")
        property(outname="active" name="$!f17" format="jsonf") constant(value=",")
        property(outname="frontend" name="$!f18" format="jsonf") constant(value=",")
        property(outname="backend" name="$!f19" format="jsonf") constant(value=",")
        property(outname="server" name="$!f20" format="jsonf") constant(value=",")
        property(outname="retries" name="$!f21" format="jsonf") constant(value=",")
        property(outname="total_time_connect" name="$!f9" format="jsonf")
      constant(value="}") constant(value=",")
      constant(value="\"queue\": {")
        property(outname="server" name="$!f22" format="jsonf") constant(value=",")
        property(outname="backend" name="$!f23" format="jsonf") constant(value=",")
        property(outname="total_time_queued" name="$!f8" format="jsonf")
      constant(value="}") constant(value=",")
      constant(value="\"session_state_at_disconnection\": {")
        property(outname="code" name="$!f16" format="jsonf") constant(value=",")
        constant(value="\"first_event\": {")
          property(outname="code" name="$.first_event" format="jsonf")
        constant(value="}") constant(value=",")
        constant(value="\"session_state\": {")
          property(outname="code" name="$.session_state" format="jsonf")
        constant(value="}")
      constant(value="}")
    constant(value="}") constant(value=",")
    constant(value="\"subsegments\":[")
      constant(value="{")
        constant(value="\"name\": \"client request time\"") constant(value=",")
        constant(value="\"start_time\":") property(name="$.start_time_seconds_with_ms") constant(value=",")
        constant(value="\"end_time\":") property(name="$.client_request_time_end_seconds_with_ms") constant(value=",")
        property(outname="id" name="$!f29" format="jsonf")
      constant(value="}") constant(value=",")
      constant(value="{")
        constant(value="\"name\": \"queued time\"") constant(value=",")
        constant(value="\"start_time\":") property(name="$.client_request_time_end_seconds_with_ms") constant(value=",")
        constant(value="\"end_time\":") property(name="$.queued_time_end_seconds_with_ms") constant(value=",")
        property(outname="id" name="$!f30" format="jsonf")
      constant(value="}") constant(value=",")
      constant(value="{")
        constant(value="\"name\": \"server connect time\"") constant(value=",")
        constant(value="\"start_time\":") property(name="$.queued_time_end_seconds_with_ms") constant(value=",")
        constant(value="\"end_time\":") property(name="$.server_connect_time_end_seconds_with_ms") constant(value=",")
        property(outname="id" name="$!f31" format="jsonf")
      constant(value="}") constant(value=",")
      constant(value="{")
        constant(value="\"name\": \"server response time\"") constant(value=",")
        constant(value="\"start_time\":") property(name="$.server_connect_time_end_seconds_with_ms") constant(value=",")
        constant(value="\"end_time\":") property(name="$.server_response_time_end_seconds_with_ms") constant(value=",")
        property(outname="id" name="$!f32" format="jsonf")
      constant(value="}")
    constant(value="]")
  constant(value="}")
}

if $programname == "haproxy" then {
    # Split log line by pipe character
    action(type="mmfields"
           separator="|")

    # Split up termination state code
    set $.first_event = substring($!f16, 0, 1);
    set $.session_state = substring($!f16, 1, 1);

    # Calculate timing values
    set $.start_time = $!f3 * 1000; # timestamp ms
    set $.start_time_ms = $.start_time + $.start_time_remainder_ms; # timestamp ms + subseconds
    set $.start_time_seconds = $.start_time_ms / 1000;
    set $.start_time_remainder_ms = $.start_time_ms % 1000;
    set $.start_time_seconds_with_ms = cstr($.start_time_seconds) & "." & cstr($.start_time_remainder_ms);

    set $.total_time = $!f11; # total time ms
    set $.end_time_ms = $.start_time_ms + cnum($.total_time);
    set $.end_time_seconds = cnum($.end_time_ms) / 1000;
    set $.end_time_remainder_ms = cnum($.end_time_ms) % 1000;
    set $.end_time_seconds_with_ms = cstr($.end_time_seconds) & "." & cstr($.end_time_remainder_ms);

    set $.client_request_time = $!f7; # time to get full request ms
    set $.client_request_time_end_ms = $.start_time_ms + cnum($.client_request_time);
    set $.client_request_time_end_seconds = cnum($.client_request_time_end_ms) / 1000;
    set $.client_request_time_end_remainder_ms = cnum($.client_request_time_end_ms) %1000;
    set $.client_request_time_end_seconds_with_ms = cstr($.client_request_time_end_seconds) & "." & cstr($.client_request_time_end_remainder_ms);

    set $.queued_time = $!f8; # time queued ms
    set $.queued_time_end_ms = $.client_request_time_end_ms + cnum($.queued_time);
    set $.queued_time_end_seconds = cnum($.queued_time_end_ms) / 1000;
    set $.queued_time_end_remainder_ms = cnum($.queued_time_end_ms) %1000;
    set $.queued_time_end_seconds_with_ms = cstr($.queued_time_end_seconds) & "." & cstr($.queued_time_end_remainder_ms);

    set $.server_connect_time = $!f9; # time to connect to server ms
    set $.server_connect_time_end_ms = $.queued_time_end_ms + cnum($.server_connect_time);
    set $.server_connect_time_end_seconds = cnum($.server_connect_time_end_ms) / 1000;
    set $.server_connect_time_end_remainder_ms = cnum($.server_connect_time_end_ms) %1000;
    set $.server_connect_time_end_seconds_with_ms = cstr($.server_connect_time_end_seconds) & "." & cstr($.server_connect_time_end_remainder_ms);

    set $.server_response_time = $!f10; # time to connect to server ms
    set $.server_response_time_end_ms = $.server_connect_time_end_ms + cnum($.server_response_time);
    set $.server_response_time_end_seconds = cnum($.server_response_time_end_ms) / 1000;
    set $.server_response_time_end_remainder_ms = cnum($.server_response_time_end_ms) %1000;
    set $.server_response_time_end_seconds_with_ms = cstr($.server_response_time_end_seconds) & "." & cstr($.server_response_time_end_remainder_ms);

    # Forward output to X-Ray daemon
    action(type="omfwd"
           Target="127.0.0.1"
           Port="2000"
           Protocol="udp"
           Template="jsondump")

    # Normal log to file
    /var/log/haproxy.log
    stop
}