AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service into an ECS cluster behind a public load balancer.
Parameters:
  LBServiceName:
    Type: String
    Default: gerrit-load-balancer
  ClusterStackName:
      Description: Stack name of the ECS cluster to deploy the services
      Type: String
      Default: gerrit-cluster
  TemplateBucketName:
    Description: S3 bucket containing cloudformation templates
    Type: String
  EnvironmentName:
      Description: An environment name used to build the log stream names
      Type: String
      Default: test
  HAProxyDockerImage:
        Description: HAProxy Docker image
        Type: String
        Default: aws-gerrit/haproxy:latest
  SidecarDockerImage:
        Description: Syslog sidecar Docker image
        Type: String
        Default: aws-gerrit/syslog-sidecar:latest
  DockerRegistryUrl:
        Description: Docker registry URL
        Type: String
  DesiredCount:
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        MinValue: 2
        Default: 2
        ConstraintDescription: number of haproxy must be at least 2
  SSHGerritPort:
        Description: Gerrit SSH port
        Type: Number
        Default: 29418
  CertificateArn:
        Description: SSL Certificates ARN
        Type: String
  HostedZoneName:
        Description: The route53 HostedZoneName.
        Type: String
  Subdomain:
        Description: The subdomain of the Gerrit cluster
        Type: String
        Default: gerrit-dual-primary
  LoadBalancerScheme:
        Description: Load Balancer schema, The nodes of an Internet-facing load balancer have public IP addresses.
        Type: String
        Default: internet-facing
        AllowedValues: [internal, internet-facing]
  GerritKeyPrefix:
        Description: Gerrit credentials keys prefix
        Type: String
  Primary1ServiceStackName:
      Description: Stack name of the ECS Primary Gerrit service
      Type: String
      Default: gerrit-service-primary-1
  Primary2ServiceStackName:
      Description: Stack name of the ECS Primary Gerrit service
      Type: String
      Default: gerrit-service-primary-2
  SyslogSidecarServiceName:
      Description: HAPRoxy Syslog Sidecar service name
      Type: String
      Default: gerrit-haproxy-sidecar
  HealthCheckGracePeriodSeconds:
      Description: HAProxy Healtcheck Grace Period
      Type: Number
      Default: 60

Resources:
    LBService:
        Type: AWS::ECS::Service
        DependsOn:
          - SSHListener
        Properties:
            Cluster:
              Fn::ImportValue:
                  !Join [':', [!Ref 'ClusterStackName', 'ClusterName']]
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            HealthCheckGracePeriodSeconds: !Ref HealthCheckGracePeriodSeconds
            LoadBalancers:
                - ContainerName: !Ref LBServiceName
                  ContainerPort: !Ref SSHGerritPort
                  TargetGroupArn: !Ref SSHTargetGroup

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: !Sub '${LBServiceName}TaskDefinition'
            TaskRoleArn: !GetAtt ECSTaskExecutionRoleStack.Outputs.TaskExecutionRoleRef
            ExecutionRoleArn: !GetAtt ECSTaskExecutionRoleStack.Outputs.TaskExecutionRoleRef
            NetworkMode: bridge
            PlacementConstraints:
                - Expression: !Sub 'attribute:target_group == haproxy'
                  Type: "memberOf"
            ContainerDefinitions:
                - Name: !Ref LBServiceName
                  Essential: true
                  Image: !Sub '${DockerRegistryUrl}/${HAProxyDockerImage}'
                  Environment:
                    - Name: GERRIT_PRIMARY_1_URL
                      Value:
                        Fn::ImportValue: !Join [':', [!Ref 'Primary1ServiceStackName', 'GerritSSHLoadBalancerDNSName']]
                    - Name: GERRIT_PRIMARY_2_URL
                      Value:
                        Fn::ImportValue: !Join [':', [!Ref 'Primary2ServiceStackName', 'GerritSSHLoadBalancerDNSName']]
                    - Name: SYSLOG_SIDECAR
                      Value: !Ref SyslogSidecarServiceName
                  Cpu: 1024
                  Memory: 2048
                  PortMappings:
                    - ContainerPort: !Ref SSHGerritPort
                      HostPort: !Ref SSHGerritPort
                      Protocol: tcp
                  Links:
                    - !Ref SyslogSidecarServiceName
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref ClusterStackName
                        awslogs-region: !Ref AWS::Region
                        awslogs-stream-prefix: !Ref EnvironmentName
                - Name: !Ref SyslogSidecarServiceName
                  Essential: true
                  Image: !Sub '${DockerRegistryUrl}/${SidecarDockerImage}'
                  Cpu: 256
                  Memory: 512
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref ClusterStackName
                        awslogs-region: !Ref AWS::Region
                        awslogs-stream-prefix: !Ref EnvironmentName

    ECSTaskExecutionRoleStack:
      Type: AWS::CloudFormation::Stack
      Properties:
        TemplateURL: !Join [ '', ['https://', !Ref TemplateBucketName, '.s3.amazonaws.com/cf-gerrit-task-execution-role.yml'] ]
        TimeoutInMinutes: '5'

    HaProxySSHLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: 'haproxy-ssh-nlb'
            Type: network
            Scheme: !Ref 'LoadBalancerScheme'
            Subnets:
              - Fn::ImportValue:
                  !Join [':', [!Ref 'ClusterStackName', 'PublicSubnetOne']]
            Tags:
                - Key: Name
                  Value: !Join ['-', [!Ref 'EnvironmentName', !Ref 'LBServiceName', 'alb']]

    SSHTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        DependsOn: HaProxySSHLoadBalancer
        Properties:
            VpcId:
              Fn::ImportValue:
                  !Join [':', [!Ref 'ClusterStackName', 'VPCId']]
            Port: !Ref SSHGerritPort
            Protocol: TCP

    SSHListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        DependsOn: HaProxySSHLoadBalancer
        Properties:
            DefaultActions:
            - Type: forward
              TargetGroupArn: !Ref SSHTargetGroup
            LoadBalancerArn: !Ref HaProxySSHLoadBalancer
            Port: !Ref SSHGerritPort
            Protocol: TCP

Outputs:
  HaProxySSHLoadBalancerDNSName:
    Description: The DNS name of the haproxy SSH load balancer
    Value: !GetAtt 'HaProxySSHLoadBalancer.DNSName'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'HaProxySSHLoadBalancerDNSName' ] ]
  HaProxySSHCanonicalHostedZoneID:
    Description: Canonical Hosted Zone ID
    Value: !GetAtt 'HaProxySSHLoadBalancer.CanonicalHostedZoneID'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'HaProxySSHCanonicalHostedZoneID' ] ]
  HaProxySSHLoadBalancerUrl:
    Description: The url of the haproxy SSH load balancer
    Value: !Join ['', ['https://', !GetAtt 'HaProxySSHLoadBalancer.DNSName']]
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'HaProxySSHLoadBalancerUrl' ] ]
  HostedZoneName:
    Description: Route53 Hosted Zone name
    Value: !Ref HostedZoneName
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'HostedZoneName' ] ]
  Subdomain:
    Description: Service DNS subdomain
    Value: !Ref Subdomain
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'Subdomain' ] ]
  CanonicalWebUrl:
    Description: Canonical Web URL
    Value: !Sub 'https://${Subdomain}.${HostedZoneName}'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'CanonicalWebUrl' ] ]
